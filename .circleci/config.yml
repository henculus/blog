version: 2

workflows:
  version: 2
  main:
    jobs:
      - build-backend
      - build-image-service
      - build-frontend
      - migrate-production-database
      - deploy:
          requires:
            - build-backend
            - build-image-service
            - build-frontend

jobs:
  build-backend:
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - restore_cache:
          key: backend-cache
      - run:
          name: Nightly Build
          command: |
            cd backend
            rustup run nightly rustc --version --verbose
            rustup run nightly cargo --version --verbose
            rustup run nightly cargo build --release
      - persist_to_workspace:
          root: ./backend/target/release
          paths:
            - blog
      - save_cache:
          key: backend-cache
          paths:
            - "~/.cargo"
            - "./backend/target"

  build-image-service:
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - restore_cache:
          key: image-service-cache
      - run:
          name: Switch Directory
          command: |
            cd image-service
            rustup run nightly rustc --version --verbose
            rustup run nightly cargo --version --verbose
            rustup run nightly cargo build --release
      - persist_to_workspace:
          root: ./image-service/target/release
          paths:
            - image-service
      - save_cache:
          key: image-service-cache
          paths:
            - "~/.cargo"
            - "./image-service/target"

  build-frontend:
    docker:
      - image: node
    steps:
      - checkout
      - restore_cache:
          key: npm-cache
      - run:
          name: Switch Directory
          command: |
            cd frontend
            npm install
            npm run build
      - persist_to_workspace:
          root: ./frontend
          paths:
            - dist
      - save_cache:
          key: npm-cache
          paths:
            - "./frontend/node_modules"

  migrate-production-database:
    docker:
      - image: christophwurst/diesel-cli
    steps:
      - checkout
      - run:
          name: Migrate database
          command: |
            cd backend
            diesel migration run --database-url=$HEROKU_DATABASE_URL

  deploy:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cp -r /tmp/workspace/dist dist
          cp /tmp/workspace/blog blog
          cp /tmp/workspace/image-service image-service
          docker build -t web .
          docker login --username=$HEROKU_REGISTRY_USERNAME --password=$HEROKU_API_KEY $HEROKU_REGISTRY_URL
          docker tag web registry.heroku.com/henculus-blog/web
          docker push registry.heroku.com/henculus-blog/web